@use "../abstracts/" as *;
.about {
  &-container {
    display: flex;
    flex-direction: column-reverse;
    gap: 6rem;
  }
  &-img {
    perspective: 600px;
    display: flex;
    justify-content: center;
    max-width: 40rem;
    max-height: 30rem;
    margin: 0 auto;
  }
  .image {
    transform-style: preserve-3d;
    transform: rotateX(var(--transform-x)) rotateY(var(--transform-y));
    cursor: grabbing;
  }
  .reset-pos {
    animation: resetPos 0.3s forwards;
  }

  .add-pos {
    animation: addPos 0.3s forwards;
  }
  &-content {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 3rem;

    &-bg {
      display: none;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      z-index: -1;
    }
  }
  &-slider {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    &-item {
      font-size: 2rem;
      animation: bump 1s infinite both;
    }
    &-text {
      opacity: 0;
      display: flex;
      gap: 0.5rem;
      font-size: 1.2rem;
      transition: opacity 0.5s;

      a {
        transition: color 0.3s;
      }

      a:hover {
        color: $main-color;
      }
    }
    &-text.active {
      opacity: 1;
    }
  }
}

@media (min-width: 768px) {
  .about {
    &-container {
      flex-direction: row;
      gap: 6rem;
    }
    &-content {
      width: 60%;
      justify-content: center;

      &-bg {
        width: 100%;
        height: 100%;
      }
    }
  }
}
@media (min-width: 992px) {
  .about {
    &-img {
      width: 45%;
      height: 25rem;
    }
    &-content {
      &-bg {
        display: block;
        max-width: 100%;
      }
    }
  }
}

@keyframes bump {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes resetPos {
  to {
    transform: rotateX(0deg) rotateY(0deg);
  }
}

@keyframes addPos {
  from {
    transform: rotateX(0deg) rotateY(0deg);
  }
  to {
    transform: rotateX(var(--transform-x)) rotateY(var(--transform-y));
  }
}
